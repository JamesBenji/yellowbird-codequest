{"version":3,"file":"js/637.b6fddb6d.js","mappings":"oQAQA,MAAMA,GAAKC,EAAAA,EAAAA,IAAaC,EAAAA,GAIlBC,GAAeC,EAAAA,EAAAA,IAAY,OAAQ,CACvCC,MAAOA,KAAA,CACLC,QAAS,OAGXC,QAAS,CACP,sBAAMC,GACJ,MAAMC,GAAYC,EAAAA,EAAAA,KAClB,IAAKD,EAAUE,KAAM,OAErB,MAAMC,GAAUC,EAAAA,EAAAA,IAAIb,EAAI,QAASS,EAAUE,KAAKG,KAC1CC,QAAgBC,EAAAA,EAAAA,IAAOJ,GAEzBG,EAAQE,WACVC,KAAKZ,QAAUS,EAAQI,OAE3B,EAEA,uBAAMC,CACJC,GAEA,MAAMZ,GAAYC,EAAAA,EAAAA,KAClB,IAAKD,EAAUE,OAASO,KAAKZ,QAAS,OAEtC,MAAMM,GAAUC,EAAAA,EAAAA,IAAIb,EAAI,QAASS,EAAUE,KAAKG,WAC1CQ,EAAAA,EAAAA,IAAUV,EAASS,GACzBH,KAAKZ,QAAU,IAAKY,KAAKZ,WAAYe,EACvC,KAIJ,Q,8zBCmGA,MAAME,EAAYpB,IACZqB,GAAaC,EAAAA,EAAAA,KACbC,GAAYC,EAAAA,EAAAA,IAAI,IAChBC,GAAWD,EAAAA,EAAAA,IAAI,IACfE,GAAaF,EAAAA,EAAAA,IAAI,IACjBG,GAAoBC,EAAAA,EAAAA,MAE1BC,EAAAA,EAAAA,KAAUC,UACRH,EAAkBI,gBAAgB,aAAc,iBAC1CX,EAAUf,mBAChBkB,EAAUS,MAAQZ,EAAUjB,QAAQoB,UACpCE,EAASO,MAAQZ,EAAUjB,QAAQsB,SACnCC,EAAWM,MAAQZ,EAAUjB,QAAQ8B,OAAO,IAG9C,MAAMC,EAAgBJ,gBACdV,EAAUH,kBAAkB,CAChCM,UAAWA,EAAUS,MACrBP,SAAUA,EAASO,MACnBC,QAASP,EAAWM,OACpB,E,08GC/JJ,MAAMG,EAAc,EAEpB,O","sources":["webpack://codequest/./src/stores/userStore.ts","webpack://codequest/./src/views/ProfilePage.vue","webpack://codequest/./src/views/ProfilePage.vue?ccbe"],"sourcesContent":["/* eslint-disable linebreak-style */\r\nimport { defineStore } from 'pinia';\r\nimport {\r\n  getFirestore, doc, getDoc, updateDoc,\r\n} from 'firebase/firestore';\r\nimport { firebaseApp } from '@/plugins/vuefire';\r\nimport useAuthStore from './auth';\r\n\r\nconst db = getFirestore(firebaseApp);\r\n\r\ntype UserData = { email: string; firstName: string; lastName: string; address: string }\r\n\r\nconst useUserStore = defineStore('user', {\r\n  state: () => ({\r\n    profile: null as UserData | null,\r\n  }),\r\n\r\n  actions: {\r\n    async fetchUserProfile() {\r\n      const authStore = useAuthStore();\r\n      if (!authStore.user) return;\r\n\r\n      const userRef = doc(db, 'Users', authStore.user.uid);\r\n      const userDoc = await getDoc(userRef);\r\n\r\n      if (userDoc.exists()) {\r\n        this.profile = userDoc.data() as UserData;\r\n      }\r\n    },\r\n\r\n    async updateUserProfile(\r\n      updatedData: { firstName: string; lastName: string; address: string; },\r\n    ) {\r\n      const authStore = useAuthStore();\r\n      if (!authStore.user || !this.profile) return;\r\n\r\n      const userRef = doc(db, 'Users', authStore.user.uid);\r\n      await updateDoc(userRef, updatedData);\r\n      this.profile = { ...this.profile, ...updatedData };\r\n    },\r\n  },\r\n});\r\n\r\nexport default useUserStore;\r\n","<!-- eslint-disable linebreak-style -->\r\n\r\n<template>\r\n  <div class=\"min-h-screen bg-gray-50 py-8 px-4 sm:px-6 lg:px-8\">\r\n    <!-- Profile Section -->\r\n    <div class=\"max-w-4xl mx-auto\">\r\n      <!-- Header -->\r\n      <div class=\"mb-8\">\r\n        <h1 class=\"text-3xl font-bold text-gray-800\">My Profile</h1>\r\n        <p class=\"text-gray-500 mt-2\">Manage your\r\n          personal information and view your order history.</p>\r\n      </div>\r\n\r\n      <!-- Profile Details -->\r\n      <div v-if=\"userStore.profile\" class=\"bg-white rounded-xl shadow-sm p-6 mb-8\">\r\n        <div class=\"space-y-4\">\r\n          <h2 v-if=\"userStore.profile\"\r\n            class=\"font-semibold text-xl\">Hello {{ userStore.profile.firstName }}\r\n            {{ userStore.profile.lastName }} ðŸ‘‹</h2>\r\n          <!-- Email -->\r\n          <div>\r\n            <p class=\"text-gray-900\">ðŸ“¬ {{ userStore.profile.email }}</p>\r\n          </div>\r\n\r\n          <!-- First Name -->\r\n          <div>\r\n            <label for=\"firstName\" class=\"block text-sm font-medium\r\n            text-gray-700 mb-1\">First Name\r\n            <input\r\n              v-model=\"firstName\"\r\n              id=\"firstName\"\r\n              type=\"text\"\r\n              class=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2\r\n              focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\r\n              placeholder=\"Enter your first name\"\r\n            />\r\n          </label>\r\n          </div>\r\n\r\n          <!-- Last Name -->\r\n          <div>\r\n            <label for=\"lastName\" class=\"block text-sm font-medium text-gray-700 mb-1\">Last Name\r\n            <input\r\n              v-model=\"lastName\"\r\n              id=\"lastName\"\r\n              type=\"text\"\r\n              class=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2\r\n              focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\r\n              placeholder=\"Enter your last name\"\r\n            />\r\n          </label>\r\n          </div>\r\n\r\n          <!-- Address -->\r\n          <div>\r\n            <label for=\"newAddress\" class=\"block text-sm font-medium\r\n            text-gray-700 mb-1\">Address\r\n            <input\r\n              v-model=\"newAddress\"\r\n              id=\"newAddress\"\r\n              type=\"text\"\r\n              class=\"w-full px-4 py-2 border border-gray-300 rounded-lg\r\n              focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\r\n              placeholder=\"Enter your address\"\r\n            />\r\n          </label>\r\n          </div>\r\n\r\n          <!-- Update Button -->\r\n          <button\r\n    @click=\"updateProfile\"\r\n    :disabled=\"isUpdating\"\r\n    class=\"w-full sm:w-auto bg-blue-500 text-white px-6 py-2 rounded-lg\r\n           hover:bg-blue-600 transition-colors duration-200\r\n           disabled:opacity-75 disabled:cursor-not-allowed\"\r\n  >\r\n    <span v-if=\"!isUpdating\">Update Profile</span>\r\n    <span v-else class=\"flex items-center justify-center gap-2\">\r\n      <svg class=\"animate-spin h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n        <circle class=\"opacity-25\" cx=\"12\" cy=\"12\"\r\n        r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n        <path class=\"opacity-75\" fill=\"currentColor\"\r\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962\r\n        0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n      </svg>\r\n      Updating...\r\n    </span>\r\n  </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-else>Loading profile...</div>\r\n\r\n      <!-- Order History -->\r\n      <div>\r\n        <h2 class=\"text-2xl font-bold text-gray-800 mb-6\">Order History</h2>\r\n\r\n        <!-- Empty State -->\r\n        <div v-if=\"orderStore.orders.length === 0\"\r\n        class=\"bg-white rounded-xl shadow-sm p-6 text-center\">\r\n          <p class=\"text-gray-500\">No orders yet.</p>\r\n        </div>\r\n\r\n        <!-- Orders List -->\r\n        <div v-else class=\"space-y-4\">\r\n          <div\r\n            v-for=\"order in orderStore.orders\"\r\n            :key=\"order.id\"\r\n            class=\"bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-300 p-6\"\r\n          >\r\n            <div class=\"flex justify-between items-center\">\r\n              <h3 class=\"text-lg font-semibold text-gray-800\">Order #{{ order.id }}</h3>\r\n              <span\r\n                :class=\"[\r\n                  'px-3 py-1 rounded-full text-sm font-medium',\r\n                  order.status === 'Delivered'\r\n                    ? 'bg-green-100 text-green-700'\r\n                    : order.status === 'Pending'\r\n                    ? 'bg-yellow-100 text-yellow-700'\r\n                    : 'bg-red-100 text-red-700',\r\n                ]\"\r\n              >\r\n                {{ order.status }}\r\n              </span>\r\n            </div>\r\n            <p class=\"text-gray-600 mt-2\">\r\n              Total: <span class=\"font-bold\">${{ order.totalAmount.toLocaleString() }}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<!-- eslint-disable linebreak-style -->\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport useOrderStore from '@/stores/order';\r\nimport useNotificationStore from '@/stores/notification';\r\nimport useUserStore from '../stores/userStore';\r\n\r\nconst userStore = useUserStore();\r\nconst orderStore = useOrderStore();\r\nconst firstName = ref('');\r\nconst lastName = ref('');\r\nconst newAddress = ref('');\r\nconst notificationStore = useNotificationStore();\r\n\r\nonMounted(async () => {\r\n  notificationStore.addNotification('Loading...', 'success');\r\n  await userStore.fetchUserProfile();\r\n  firstName.value = userStore.profile.firstName;\r\n  lastName.value = userStore.profile.lastName;\r\n  newAddress.value = userStore.profile.address;\r\n});\r\n\r\nconst updateProfile = async () => {\r\n  await userStore.updateUserProfile({\r\n    firstName: firstName.value,\r\n    lastName: lastName.value,\r\n    address: newAddress.value,\r\n  });\r\n};\r\n</script>\r\n","import script from \"./ProfilePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProfilePage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["db","getFirestore","firebaseApp","useUserStore","defineStore","state","profile","actions","fetchUserProfile","authStore","useAuthStore","user","userRef","doc","uid","userDoc","getDoc","exists","this","data","updateUserProfile","updatedData","updateDoc","userStore","orderStore","useOrderStore","firstName","ref","lastName","newAddress","notificationStore","useNotificationStore","onMounted","async","addNotification","value","address","updateProfile","__exports__"],"sourceRoot":""}